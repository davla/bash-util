#!/usr/bin/env bash

# This script updates globally installed npm packages
# for all installed node versions

#####################################################
#
#                   Variables
#
#####################################################

. "$HOME/.bashrc"
. "$NVM_DIR/nvm.sh"

#####################################################
#
#                   Aliases
#
#####################################################

shopt -s expand_aliases

# Echoes normally if from terminal emulator, otherwise uses syslog
tty -s && alias print='echo' || alias print='logger'

#####################################################
#
#                   Functions
#
#####################################################

# Prints a log-like entry, adding the current date
# to the passed message
#
# Arguments:
#   - $1: The message to be logged.
function log {
    local MESSAGE="$1"

    print "$MESSAGE" on $(date +'%d-%m-%Y %T')
}

#####################################################
#
#               Interactive environment
#
#####################################################

# Checking for interactive environment, to effectively
# source ~/.bashrc. If don't have them rerunning this
# script in a bash interactive environment.
if ! grep '.*i.*' <<<"$-" &> /dev/null; then
    bash -i "$0"
    exit
fi

#####################################################
#
#               Updating packages
#
#####################################################

nvm ls | grep -v 'N/A' | grep -oP 'v\d\.\d\.\d' | sort -Vu | \
while read VERSION; do
    nvm use "$VERSION" &> /dev/null
    [[ -n $(npm --global update) ]] \
        && log "npm packages updated for node.js version $VERSION" \
        || log "npm packages not updated for node.js version $VERSION"
done
